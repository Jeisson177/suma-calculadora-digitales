LIBRARY IEEE;
USE ieee.std_logic_1164.all;
-----------------------------------------------------
ENTITY Sum4bits IS
  PORT (      swA:   IN  STD_LOGIC_VECTOR(3 DOWNTO 0);--Switchs para definir el numero A
              swB:   IN  STD_LOGIC_VECTOR(3 DOWNTO 0);--Switchs para definir el numero B
				  resa:  OUT STD_LOGIC_VECTOR(3 DOWNTO 0);--Resultado de la suma de 4 bits
				  Cout:  OUT STD_LOGIC;--Carry final de la suma de 4 bits
				  Cin :  IN  STD_LOGIC);--Carry inicial de la suma de 4 bits

END ENTITY Sum4bits;
------------------------------------------------------
ARCHITECTURE operation OF Sum4bits IS

SIGNAL C1,C2,C3: STD_LOGIC;--Carrys internos que entran y salen de cada bloque de la operacion 

BEGIN
 	
   C1      <= (swA(0) AND swB(0)) OR  (Cin AND swA(0)) OR (Cin AND swB(0));--Se realizan las operaciones con las compuertas 
	resa(0) <= swA(0) XOR swB(0) XOR Cin;                                   --para cada uno de los 4 carrys y bits del resa
	                                                                        --obteniendo la suma total de los numeros

	C2      <= (swA(1) AND swB(1)) OR  (C1 AND swA(1)) OR (C1 AND swB(1));
   resa(1) <=  swA(1) XOR swB(1) XOR C1;
   
	C3      <= (swA(2) AND swB(2)) OR  (C2 AND swA(2)) OR (C2 AND swB(2));
   resa(2) <=  swA(2) XOR swB(2) XOR C2;
   
	Cout    <= (swA(3) AND swB(3)) OR  (C3 AND swA(3)) OR (C3 AND swB(3));
   resa(3) <= (swA(3) XOR swB(3)) XOR C3;
	
END ARCHITECTURE operation;
